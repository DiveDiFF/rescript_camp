// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_array = require("rescript/lib/js/caml_array.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

var input = Fs.readFileSync("input/Week1/Year2020Day2.sample.txt", "utf8");

var inputList = Belt_Array.map(Belt_Array.map(input.split("\n"), (function (item) {
            return item.split(" ");
          })), (function (item) {
        var conditionArray = Belt_Array.map(Caml_array.get(item, 0).split("-"), (function (value) {
                return Belt_Option.getWithDefault(Belt_Int.fromString(value), 0);
              }));
        return [
                [
                  Caml_array.get(conditionArray, 0),
                  Caml_array.get(conditionArray, 1)
                ],
                Caml_array.get(item, 1).charAt(0),
                Caml_array.get(item, 2)
              ];
      }));

console.log(Belt_Array.keep(inputList, (function (item) {
            var condition = item[0];
            var numberOfChar = item[2].split(item[1]).length - 1 | 0;
            if (condition[0] <= numberOfChar) {
              return condition[1] >= numberOfChar;
            } else {
              return false;
            }
          })).length);

console.log(Belt_Array.keep(inputList, (function (item) {
            var condition = item[0];
            var password = item[2];
            var $$char = item[1];
            var firstMatch = password.charAt(condition[0] - 1 | 0) === $$char;
            var secondMatch = password.charAt(condition[1] - 1 | 0) === $$char;
            if (firstMatch) {
              if (secondMatch) {
                return false;
              } else {
                return true;
              }
            } else if (secondMatch) {
              return true;
            } else {
              return false;
            }
          })).length);

exports.input = input;
exports.inputList = inputList;
/* input Not a pure module */
