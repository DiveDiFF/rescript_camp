// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Caml_array = require("rescript/lib/js/caml_array.js");

var input = Fs.readFileSync("input/Week1/Year2020Day5.sample.txt", "utf8");

var inputList = input.split("\n");

function getRowsPosition(list, $$char) {
  if ($$char === "F") {
    return [
            Belt_Array.keepWithIndex(Caml_array.get(list, 0), (function (param, index) {
                    return index < (Caml_array.get(list, 0).length >> 1);
                  })),
            Caml_array.get(list, 1)
          ];
  } else if ($$char === "B") {
    return [
            Belt_Array.keepWithIndex(Caml_array.get(list, 0), (function (param, index) {
                    return index >= (Caml_array.get(list, 0).length >> 1);
                  })),
            Caml_array.get(list, 1)
          ];
  } else if ($$char === "L") {
    return [
            Caml_array.get(list, 0),
            Belt_Array.keepWithIndex(Caml_array.get(list, 1), (function (param, index) {
                    return index < (Caml_array.get(list, 1).length >> 1);
                  }))
          ];
  } else if ($$char === "R") {
    return [
            Caml_array.get(list, 0),
            Belt_Array.keepWithIndex(Caml_array.get(list, 1), (function (param, index) {
                    return index >= (Caml_array.get(list, 1).length >> 1);
                  }))
          ];
  } else {
    return list;
  }
}

console.log(Belt_Array.map(inputList, (function (passcode) {
            return Belt_Array.reduceWithIndex(passcode.split(""), [
                        Belt_Array.range(0, 127),
                        Belt_Array.range(0, 7)
                      ], (function (acc, value, index) {
                          console.log([
                                acc,
                                value,
                                index
                              ]);
                          return getRowsPosition(acc, value);
                        }));
          })));

exports.input = input;
exports.inputList = inputList;
exports.getRowsPosition = getRowsPosition;
/* input Not a pure module */
